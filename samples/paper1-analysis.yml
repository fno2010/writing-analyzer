meta:
  author:
    - João Martins
    - Mohamed Ahmed
    - Costin Raiciu
    - Vladimir Andrei Olteanu
    - Michio Honda
    - Roberto Bifulco
    - Felipe Huici
  editor: 
    - Ratul Mahajan
    - Ion Stoica
  title: ClickOS and the Art of Network Function Virtualization
  booktitle: Proceedings of the 11th USENIX Symposium on Networked Systems Design and Implementation, NSDI 2014, Seattle, WA, USA, April 2-4, 2014
  pages: 459-473
  publisher: USENIX Association
  year: 2014
  url: https://www.usenix.org/conference/nsdi14/technical-sessions/presentation/martins
  biburl: http://dblp.uni-trier.de/rec/bib/conf/nsdi/MartinsAROHBH14
  bibsource: dblp computer science bibliography, http://dblp.org
body:
  introduction:
    - paragraph_no: 1
      content:
        - sentence_no: 1
          content: The presence of hardware-based network appliances (also known as middleboxes) has exploded, to the point where they are now an intrinsic and fundamental part of today’s operational networks.
          move: !!str 1.2b
        - sentence_no: 2
          content: They are essential to network operators, supporting a diverse set of functions ranging from security (firewalls, IDSes, traffic scrubbers), traffic shaping (rate limiters, load balancers), dealing with address space exhaustion (NATs) or improving performance (traffic accelerators, caches, proxies), to name a few.
          move: !!str 1.2b
        - sentence_no: 3
          content: "Middleboxes are ubiquitous: a third of access networks show symptoms of stateful middlebox processing [12] and in enterprise networks there are as many middleboxes deployed as routers and switches [37]."
          move: !!str 1.2b
    - paragraph_no: 2
      content:
        - sentence_no: 1
          content: "Despite their usefulness, recent reports and operator feedback reveal that such proprietary middleboxes come with a number of significant drawbacks [9]: middleboxes are expensive to buy and manage [37], and introducing new features means having to deploy new hardware at the next purchase cycle, a process which on average takes four years."
          move: !!str 2.1a
        - sentence_no: 2
          content: Hardware middleboxes cannot easily be scaled up and down with shifting demand, and so must provisioned to cope with peak demand, which is wasteful.
          move: !!str 2.1a
        - sentence_no: 3
          content: Finally, a considerable level of investment is needed to develop new hardware-based devices, which leaves potential small players out of the market and so raises innovation barriers.
          move: !!str 2.1a
    - paragraph_no: 3
      content:
        - sentence_no: 1
          content: To address these issues, Network Function Virtualization (NFV) has been recently proposed to shift middlebox processing from hardware appliances to software running on inexpensive, commodity hardware (e.g., x86 servers with 10Gb NICs).
          move: !!str 2.1c
        - sentence_no: 2
          content: "NFV has already gained a considerable momentum: seven of the world’s leading telecoms network operators, along with 52 other operators, IT and equipment vendors and technology providers, have initiated a new standards group for the virtualization of network functions [8]."
          move: !!str 2.1c
    - paragraph_no: 4
      content:
        - sentence_no: 1
          content: "NFV platforms must support multi-tenancy, since they are intended to concurrently run software belonging to the operator and (potentially untrusted) third parties: colocated middleboxes should be isolated not only from a security but also a performance point of view [10]."
          move: !!str 2.1a
        - sentence_no: 2
          content: Further, as middleboxes implement a large range of functionality, platforms should accommodate a wide range of OSes, APIs and software packages.
          move: !!str 2.1a
    - paragraph_no: 5
      content:
        - sentence_no: 1
          content: Is it possible to build a software-based virtualized middlebox platform that fits these requirements?
          move: !!str 2.1d
        - sentence_no: 2
          content: Hypervisor-based technologies such as Xen or KVM are well established candidates and offer security and performance isolation out-of-the-box.
          move: !!str 2.1c
        - sentence_no: 3
          content: However, they only support small numbers of tenants and their networking performance is unsatisfactory.
          move: !!str 2.1a
        - sentence_no: 4
          content: "At a high-level, the reason for the poor performance is simple: neither the hypervisors (Xen or KVM), nor the guest OSes (e.g., Linux) have been optimized for middlebox processing."
          move: !!str 2.1a
    - paragraph_no: 5
      content:
        - sentence_no: 1
          content: In this paper we present the design, implementation and evaluation of ClickOS, a Xen-based software platform optimized for middlebox processing.
          move: !!str 3.1b
        - sentence_no: 2
          content: To achieve high performance, ClickOS implements an extensive overhaul of Xen’s I/O subsystem, including changes to the back-end switch, virtual net devices and back and front-end drivers.
          move: !!str 3.2
        - sentence_no: 3
          content: "These changes enable ClickOS to significantly speed up networking in middleboxes running in Linux virtual machines: for simple packet generation, Linux throughput increases from 6.46 Gb/s to 9.68 Gb/s for 1500B packets and from 0.42 Gb/s to 5.73 Gb/s for minimum-sized packets."
          move: !!str 3.4
    - paragraph_no: 6
      content:
        - sentence_no: 1
          content: A key observation is that developing middleboxes as applications running over Linux (and other commodity OSes) is a complex task and uses few of the OS services beyond network connectivity.
          move: !!str 3.5
        - sentence_no: 2
          content: To allow ease of development, a much better choice is to use specialized frameworks to program middleboxes.
          move: !!str 3.5
        - sentence_no: 3
          content: Click [17] is a stand-out example as it allows users to build complex middlebox processing configurations by using simple, well known processing elements.
          move: !!str 3.5
        - sentence_no: 4
          content: Click is great for middlebox processing, but it currently needs Linux to function and so it inherits the overheads of commodity OSes.
          move: !!str 3.5
    - paragraph_no: 7
      content:
        - sentence_no: 1
          content: To support fast, easily programmable middleboxes, ClickOS implements a minimalistic guest virtual machine that is optimized from the ground up to run Click processing at rates of millions of packets per second.
          move: !!str 3.5
        - sentence_no: 2
          content: ClickOS images are small (5MB), making it possible to run a large number of them (up to 400 in our tests).
          move: !!str 3.5
        - sentence_no: 3
          content: ClickOS virtual machines can boot and instantiate middlebox processing in under 30 milliseconds, and can saturate a 10Gb/s link for almost all packets sizes while concurrently running as many as 100 ClickOS virtual machines on a single CPU core.
          move: !!str 3.5
  result:
    - paragraph_no: 1
      content:
        - sentence_no: 1
          content: "Having presented the ClickOS architecture, its components and their optimization, we now provide a thorough base evaluation of the system."
          move: !!str 1.4
        - sentence_no: 2
          content: "After this, in Section 9, we will describe the implementation of several middleboxes as well as performance results for them."
          move: !!str 1.4
    - paragraph_no: 2
      content:
        - sentence_no: 1
          content: "The ClickOS tests in this section were conducted using either (1) a low-end, single-CPU Intel Xeon E3-1220 server with 4 cores at 3.1 GHz and 16 GB of DDR3-ECC RAM (most tests); or (2) a mid-range, single-CPU Intel Xeon E5-1650 server with 6 cores at 3.2 GHz and 16 GB of DDR3-ECC RAM (switch and scalability tests)."
          move: !!str 1.1
        - sentence_no: 2
          content: "In all cases we used Linux 3.6.10 for dom0 and domU, Xen 4.2.0, Click 2.0.1 and netmap’s pkt-gen application for packet generation and rate measurements."
          move: !!str 1.1
        - sentence_no: 3
          content: "All packet generation and rate measurements on an external box are conducted using one or more of the low-end servers, and all NICs are connected through direct cables."
          move: !!str 1.1
        - sentence_no: 4
          content: "For reference, 10Gb/s equates to about 14.8 Mp/s for minimum-sized packets and 822 Kp/s for maximum-sized packets."
          move: !!str 1.1
    - paragraph_no: 3
      content:
        - sentence_no: 1
          content: "The goal is to ensure that the switching capacity is high so that it does not become a bottleneck as more ClickOS VMs, cores and NICs are added to the system."
          move: !!str 1.1
    - paragraph_no: 4
      content:
        - sentence_no: 1
          content: "For this test we rely on a Linux (i.e., non-Xen) system."
          move: !!str 1.1
        - sentence_no: 2
          content: "We use a user-space process running pkt-gen to generate packets towards the switch, and from there onto a single 10 Gb/s Ethernet port; a separate, low-end server then uses pkt-gen once again to receive the packets and to measure rates."
          move: !!str 1.1
        - sentence_no: 3
          content: "We then add another pkt-gen user-process and 10Gb/s Ethernet port to test scalability."
          move: !!str 1.1
        - sentence_no: 4
          content: "Each pkt-gen/port pair uses a single CPU core (so two in total for the 20Gb/s test)."
          move: !!str 1.1
    - paragraph_no: 4
      content:
        - sentence_no: 1
          content: "For the single port pair case, the switch saturated the 10Gb/s pipe for all packet sizes (Figure 4)."
          move: !!str 1.3
        - sentence_no: 2
          content: "For the two port pairs case, the switch fills up the entire cumulative 20Gb/s pipe for all packet sizes except minimum-sized ones, for which it achieves 70% of line rate."
          move: !!str 3.1
        - sentence_no: 3
          content: "Finally, we also conducted receive experiments (where packets are sent from an external box towards the system hosting the switch) which resulted in roughly similar rates."
          move: !!str 3.1
  conclusion:
    - paragraph_no: 1
      content:
        - sentence_no: 1
          content: This paper has presented ClickOS, a Xen-based virtualized platform optimized for middlebox processing.
          move: !!str 1.2
        - sentence_no: 2
          content: "ClickOS can turn Network Function Virtualization into reality: it runs hundreds of middleboxes on commodity hardware, offers millions of packets per second processing speeds and yields low packet delays."
          move: !!str 1.4
        - sentence_no: 3
          content: Our experiments have shown that a low-end server can forward packets at around 30Gb/s.
          move: !!str 1.4
    - paragraph_no: 2
      content:
        - sentence_no: 1
          content: ClickOS is proof that software solutions alone are enough to significantly speed up virtual machine processing, to the point where the remaining overheads are dwarfed by the ability to safely consolidate heterogeneous middlebox processing onto the same hardware.
          move: !!str 1.6
        - sentence_no: 2
          content: ClickOS speeds up networking for all Xen virtual machines by applying well known optimizations including reducing the number of hypercalls, use of batching, and removing unnecessary software layers and data paths.
          move: !!str 1.6
    - paragraph_no: 3
      content:
        - sentence_no: 1
          content: The major contribution of ClickOS is adopting Click as the main programming abstraction for middleboxes and creating a tailor-made guest operating system to run Click configurations.
          move: !!str 1.5
        - sentence_no: 2
          content: Such specialization allows us to optimize the runtime of middleboxes to the point where they boot in milliseconds, while allowing us to support a wide range of functionality.
          move: !!str 1.5
        - sentence_no: 3
          content: Our implementations of a software BRAS and a Carrier-Grade NAT show that ClickOS delivers production-level performance when running real middlebox functionality.
          move: !!str 1.5
    - paragraph_no: 4
      content:
        - sentence_no: 1
          content: In the end, we believe that ClickOS goes beyond replacing hardware middleboxes with the software equivalent.
          move: !!str 1.5
        - sentence_no: 2
          content: Small, quick-to-boot VMs make it possible to offer personalized processing (e.g., firewalls) to a large number of users with comparatively little hardware.
          move: !!str 1.5
        - sentence_no: 3
          content: Boot times in the order of milliseconds allow fast scaling of processing dynamically (e.g., in response to a flash crowd) as well as migration with negligible down-time.
          move: !!str 1.5
        - sentence_no: 4
          content: Finally, ClickOS could help with testing and deployment of new features by directing subsets of flows to VMs running experimental code; issues with the features would then only affect a small part of the traffic, and even VMs crashing would not represent a major problem since they could be re-instantiated in milliseconds.
          move: !!str 1.5
